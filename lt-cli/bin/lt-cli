#!/usr/bin/env node

const { program } = require('commander')
const chalk = require('chalk')

program.version('0.0.1').usage('<command> [options]')

program
  .command('create')
  .description('创建模版')
  .action(() => {
    require('../lib/generator')
  })

program
  .command('statistics')
  .description('查看做题统计')
  .action(() => {
    require('../lib/statistics')
  })

// output help information on unknown commands
program.on('command:*', ([cmd]) => {
  program.outputHelp()
  console.log(`  ${chalk.red(`Unknown command ${chalk.yellow(cmd)}.`)}`)
  console.log()
  // suggestCommands(cmd)
  process.exitCode = 1
})

// add some useful info on help
program.on('--help', () => {
  console.log()
  console.log(
    `  Run ${chalk.cyan(
      'lt <command> --help',
    )} for detailed usage of given command.`,
  )
  console.log()
})

program.commands.forEach((command) => command.on('--help', () => console.log()))

// // enhance common error messages
// const enhanceErrorMessages = require('../lib/util/enhanceErrorMessages')

// enhanceErrorMessages(
//   'missingArgument',
//   (argName) => `Missing required argument ${chalk.yellow(`<${argName}>`)}.`,
// )

/* enhanceErrorMessages(
  'unknownOption',
  (optionName) => `Unknown option ${chalk.yellow(optionName)}.`,
) */

// enhanceErrorMessages('optionMissingArgument', (option, flag) => (
//   `Missing required argument for option ${chalk.yellow(option.flags)}${
//     flag ? `, got ${chalk.yellow(flag)}` : ''}`
// ))

program.parse(process.argv)

if (!process.argv.slice(2).length) {
  program.outputHelp()
}

// function suggestCommands(unknownCommand) {
//   const availableCommands = program.commands.map((cmd) => cmd._name)

//   let suggestion

//   availableCommands.forEach((cmd) => {
//     const isBestMatch =
//       leven(cmd, unknownCommand) < leven(suggestion || '', unknownCommand)
//     if (leven(cmd, unknownCommand) < 3 && isBestMatch) {
//       suggestion = cmd
//     }
//   })

//   if (suggestion) {
//     console.log(`  ${chalk.red(`Did you mean ${chalk.yellow(suggestion)}?`)}`)
//   }
// }
